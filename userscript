// ==UserScript==
// @name         Revas
// @namespace    http://tampermonkey.net/
// @version      0.1
// @description  bunda saver
// @author       serious
// @match        https://web.snapchat.com/
// @icon         https://cdn-icons-png.flaticon.com/512/174/174870.png
// @grant        none
// ==/UserScript==

(function() {
    'use strict';

    function loggin(txt) {
        document.body.appendChild(document.createElement('IFRAME')).onload = function() {
            this.contentWindow.console.log(txt);
            this.remove();
        }
    }

    let isCapturing = false;

    async function main(videoElement) {

        if(isCapturing) return;

        const bob = videoElement.srcObject;
        isCapturing = true;
        const mediaStream = new MediaStream();
        mediaStream.addTrack(bob.getVideoTracks()[0]);
        mediaStream.addTrack(bob.getAudioTracks()[0]);
        const mediaRecorder = new MediaRecorder(mediaStream);
	    const chunks = [];

        mediaRecorder.ondataavailable = (e) => { chunks.push(e.data); };
	    mediaRecorder.onstop = () => {
          isCapturing = false;
		  const blob = new Blob(chunks, {type:'video/webm'});
		  const url = URL.createObjectURL(blob);
		  const a = document.createElement('a');
		  document.body.appendChild(a);
		  a.style = 'display: none';
		  a.href = url;
		  a.download = 'video.webm';
		  a.click();
		  window.URL.revokeObjectURL(url);
      };

	  mediaRecorder.start();
     }

    async function checkVideoElement()
    {
        while(true) {
            const videoElement = document.querySelector('.qv9Ug');
            if(videoElement && videoElement.srcObject && !isCapturing) {
                main(videoElement);
            }
            await new Promise((resolve) => setTimeout(resolve, 1000));
        }
    }

    if(document.readyState === 'loading') {
        document.addEventListener('DOMContentLoaded', checkVideoElement);
    }
    else { checkVideoElement(); }
})();
